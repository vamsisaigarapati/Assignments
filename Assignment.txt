import csv   #For reading csv files
import math  #For square root function

def readcsv(fname):
    '''Reads a csv file and returns its contents'''
    with open(fname, 'r') as f:
        reader = csv.reader(f)
        print(reader)
        lines = list(reader)
    return lines

def calc_coeff(data):
    '''Returns correlation coefficient'''
    N=len(data)#Need: number of elements, sum of pairwise products...
    x=[float(i[0]) for i in data]
    y=[float(i[1]) for i in data]
    xy=[float(i[0])*float(i[1]) for i in data]
    sum_of_x,sum_of_y=sum(x),sum(y)#...sum of x data, sum of y data...
    square=lambda p:p*p
    sum_of_x_square,sum_of_y_square=sum(map(square,x)),sum(map(square,y))#...sum of squares of x data, sum of squares of y data
    sum_of_xy=sum(xy)
    Numerator=(N*sum_of_xy)-(sum_of_x*sum_of_y)
    stdev_x= math.sqrt((N*sum_of_x_square)-(square(sum_of_x)))
    stdev_y= math.sqrt((N*sum_of_y_square)-(square(sum_of_y)))
    correlation_coefficient=Numerator/(stdev_x*stdev_y)
    return round(correlation_coefficient,2)
    #Get number of items...
    #...Assume each row after header is 1 pair of elements
    #Probably best to do the following sums in a loop;...
    #...don't forget to skip the header row
      #sum of pairwise products (x[i] * y[i])
      #sum of x values
      #sum of y values
      #sum of squared x values (x[i]**2)
      #sum of squared y values (y[i]**2)
    #Calculate the numerator
    #Calculate the x part of the denominator
    #Calculate the y part of the denominator
    #Calculate the Pearson's correlation coefficient
    #Optional: print debugging info
    #Return the coefficient, rounded to 2 decimal places

def main():
    '''Controls the program'''
    filename = r"C:\Users\vamsisai.garapati\Documents\height_weight.csv"
    data=readcsv(filename)#Get the data (call readcsv)
    #print(data[1::])
    coeff=calc_coeff(data[1::])#Get the coefficient
    print(f"Pearsonâ€™s correlation coefficient for given heights and corresponding weights of people is {coeff}")
main()
